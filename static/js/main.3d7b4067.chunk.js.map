{"version":3,"sources":["components/SearchBar.js","BooksAPI.js","components/Book.js","components/SearchResult.js","components/Search.js","components/BooksShelf.js","components/ShelvesList.js","App.js","index.js"],"names":["SearchBar","filterTimeout","onChangeInput","className","to","type","onChange","e","clearTimeout","setTimeout","target","value","placeholder","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","books","update","book","shelf","id","method","body","JSON","stringify","search","query","maxResults","Book","onBooksUpdate","useState","setShelf","onSelectChangeHandler","a","selectedShelf","style","width","height","backgroundImage","imageLinks","smallThumbnail","disabled","title","authors","join","SearchResult","allBooks","forEach","b","map","Search","searchResults","setSearchResults","changed","setChanged","onChangeInputHandler","BooksAPI","setAllBooks","useEffect","mounted","getBooks","Array","isArray","newShelf","BooksShelf","ShelvesList","setBooks","onUpdateBooksHandler","val","booksForShelf","filter","App","ReactDOM","render","path","element","document","getElementById"],"mappings":"8QA4BeA,EAzBG,SAAC,GAAuB,IACpCC,EADeC,EAAoB,EAApBA,cASnB,OACE,sBAAKC,UAAU,mBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,eAAeC,GAAG,IAAlC,mBAGA,qBAAKD,UAAU,6BAAf,SACE,uBACEE,KAAK,OACLC,SAfqB,SAACC,GAC5BC,aAAaP,GACbA,EAAgBQ,YAAW,WACzBP,EAAcK,EAAEG,OAAOC,SACtB,MAYGC,YAAY,2C,OCrBhBC,EAAM,wCAERC,EAAQC,aAAaD,MAEpBA,IAAOA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAE5E,IAAMC,EAAU,CACdC,OAAQ,mBACRC,cAAeR,GAQJS,EAAS,kBACpBC,MAAM,GAAD,OAAIX,EAAJ,UAAiB,CAAEO,YACrBK,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUA,EAAKC,UAEZC,EAAS,SAACC,EAAMC,GAAP,OACpBR,MAAM,GAAD,OAAIX,EAAJ,kBAAiBkB,EAAKE,IAAM,CAC/BC,OAAQ,MACRd,QAAQ,2BACHA,GADE,IAEL,eAAgB,qBAElBe,KAAMC,KAAKC,UAAU,CAAEL,YACtBP,MAAK,SAACC,GAAD,OAASA,EAAIC,WAEVW,EAAS,SAACC,EAAOC,GAAR,OACpBhB,MAAM,GAAD,OAAIX,EAAJ,WAAkB,CACrBqB,OAAQ,OACRd,QAAQ,2BACHA,GADE,IAEL,eAAgB,qBAElBe,KAAMC,KAAKC,UAAU,CAAEE,QAAOC,iBAE7Bf,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUA,EAAKC,UCOVY,EA7CF,SAAC,GAA6B,IAA3BV,EAA0B,EAA1BA,KAAMW,EAAoB,EAApBA,cAAoB,EACdC,mBAASZ,EAAKC,OAAS,QADT,mBACjCA,EADiC,KAC1BY,EAD0B,OAEVD,oBAAS,GAFC,mBAIlCE,GAJkC,UAIb,uCAAG,WAAOtC,GAAP,eAAAuC,EAAA,6DACtBC,EAAgBxC,EAAEG,OAAOC,MAC/BiC,EAASG,GACTL,EAAcX,EAAMgB,GAHQ,SAItBjB,EAAOC,EAAMgB,GAJS,2CAAH,uDAM3B,OACE,6BACE,sBAAK5C,UAAU,OAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBACEA,UAAU,aACV6C,MAAO,CACLC,MAAO,IACPC,OAAQ,IACRC,gBAAgB,OAAD,OACbpB,EAAKqB,YAAcrB,EAAKqB,WAAWC,eADtB,QAKnB,qBAAKlD,UAAU,qBAAf,SACE,yBAAQQ,MAAOqB,EAAO1B,SAAUuC,EAAhC,UACE,wBAAQlC,MAAM,SAAS2C,UAAQ,EAA/B,wBAGA,wBAAQ3C,MAAM,mBAAd,+BACA,wBAAQA,MAAM,aAAd,0BACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,0BAIN,qBAAKR,UAAU,aAAf,SAA6B4B,EAAKwB,QAClC,qBAAKpD,UAAU,eAAf,SACG4B,EAAKyB,SAAWzB,EAAKyB,QAAQC,KAAK,cCpB9BC,EAnBM,SAAC,GAAwC,IAAtC7B,EAAqC,EAArCA,MAAOa,EAA8B,EAA9BA,cAAeiB,EAAe,EAAfA,SAQ5C,OAPA9B,EAAM+B,SAAQ,SAAC7B,GAAD,OACZ4B,EAASC,SAAQ,SAACC,GACZA,EAAE5B,IAAMF,EAAKE,KACfF,EAAKC,MAAQ6B,EAAE7B,aAKnB,qBAAK7B,UAAU,uBAAf,SACE,oBAAIA,UAAU,aAAd,SACG0B,EAAMiC,KAAI,SAAC/B,GAAD,OACT,cAAC,EAAD,CAAMA,KAAMA,EAAoBW,cAAeA,GAAxBX,EAAKE,YCiCvB8B,EA1CA,WAAO,IAAD,EACuBpB,mBAAS,IADhC,mBACZqB,EADY,KACGC,EADH,OAEWtB,oBAAS,GAFpB,mBAEZuB,EAFY,KAEHC,EAFG,KAIbC,EAAoB,uCAAG,WAAO7B,GAAP,eAAAO,EAAA,yDACtBP,EADsB,yCACR0B,EAAiB,KADT,uBAEPI,EAAgB9B,EAAO,GAFhB,OAErBV,EAFqB,OAG3BoC,EAAiBpC,GAHU,2CAAH,sDAJP,EAeac,mBAAS,IAftB,mBAeZgB,EAfY,KAeFW,EAfE,KA4BnB,OAXAC,qBAAU,WACR,IAAIC,GAAU,EACRC,EAAQ,uCAAG,4BAAA3B,EAAA,sEACGuB,IADH,OACT3C,EADS,OAEf4C,EAAY5C,GACZ8C,GAAU,EAHK,2CAAH,qDAMTA,GAASC,MACb,IAGD,sBAAKtE,UAAU,eAAf,UACE,cAAC,EAAD,CAAWD,cAAekE,IACzBM,MAAMC,QAAQX,IACb,cAAC,EAAD,CACEnC,MAAOmC,EACPL,SAAUA,EACVjB,cAzBc,SAACX,EAAM6C,GAC3B7C,EAAKC,MAAQ4C,EACbT,GAAYD,UCADW,EAfI,SAAC,GAAqC,IAAnC7C,EAAkC,EAAlCA,MAAOH,EAA2B,EAA3BA,MAAOa,EAAoB,EAApBA,cAClC,OACE,sBAAKvC,UAAU,YAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiC6B,IACjC,qBAAK7B,UAAU,kBAAf,SACE,oBAAIA,UAAU,aAAd,SACG0B,EAAMiC,KAAI,SAAC/B,GAAD,OACT,cAAC,EAAD,CAAuBA,KAAMA,EAAMW,cAAeA,GAAvCX,EAAKwB,kBCwCbuB,EA7CK,WAClB,IADwB,EAOEnC,mBAAS,IAPX,mBAOjBd,EAPiB,KAOVkD,EAPU,OAQMpC,oBAAS,GARf,mBAQjBuB,EARiB,KAQRC,EARQ,KAUxBI,qBAAU,WACR,IAAIC,GAAU,EACRC,EAAQ,uCAAG,4BAAA3B,EAAA,sEACGuB,IADH,OACT3C,EADS,OAEfqD,EAASrD,GACT8C,GAAU,EAHK,2CAAH,qDAMTA,GAASC,MACb,IAEH,IAAMO,EAAuB,SAACjD,EAAM6C,GAClC7C,EAAKC,MAAQ4C,EACbT,GAAYD,IAGd,OACE,qBAAK/D,UAAU,qBAAf,SACE,8BA3BY,CACd,CAAEoD,MAAO,oBAAqB0B,IAAK,oBACnC,CAAE1B,MAAO,eAAgB0B,IAAK,cAC9B,CAAE1B,MAAO,OAAQ0B,IAAK,SAyBTnB,KAAI,SAAC9B,GACZ,IAAMkD,EAAgBrD,EAAMsD,QAAO,SAACpD,GAAD,OAAUA,EAAKC,OAASA,EAAMiD,OACjE,OACE,cAAC,EAAD,CAEEjD,MAAOA,EAAMuB,MACb1B,MAAOqD,EACPxC,cAAesC,GAHVhD,EAAMuB,eCfV6B,MAhBf,WACE,OACE,qBAAKjF,UAAU,MAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,2CAEF,cAAC,EAAD,IACA,qBAAKA,UAAU,cAAf,SACE,cAAC,IAAD,CAAMC,GAAG,UAAT,gC,OCRViF,IAASC,OACP,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,WAGnCC,SAASC,eAAe,W","file":"static/js/main.3d7b4067.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst SearchBar = ({ onChangeInput }) => {\n  let filterTimeout;\n  const onChangeInputHandler = (e) => {\n    clearTimeout(filterTimeout);\n    filterTimeout = setTimeout(() => {\n      onChangeInput(e.target.value);\n    }, 500);\n  };\n\n  return (\n    <div className=\"search-books-bar\">\n      <Link className=\"close-search\" to=\"/\">\n        Close\n      </Link>\n      <div className=\"search-books-input-wrapper\">\n        <input\n          type=\"text\"\n          onChange={onChangeInputHandler}\n          placeholder=\"Search by title, author, or ISBN\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SearchBar;\n","const api = \"https://reactnd-books-api.udacity.com\";\n\nlet token = localStorage.token;\n\nif (!token) token = localStorage.token = Math.random().toString(36).substr(-8);\n\nconst headers = {\n  Accept: \"application/json\",\n  Authorization: token,\n};\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.book);\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then((res) => res.json())\n    .then((data) => data.books);\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: \"PUT\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ shelf }),\n  }).then((res) => res.json());\n\nexport const search = (query, maxResults) =>\n  fetch(`${api}/search`, {\n    method: \"POST\",\n    headers: {\n      ...headers,\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ query, maxResults }),\n  })\n    .then((res) => res.json())\n    .then((data) => data.books);\n","import { update } from \"../BooksAPI\";\nimport { useEffect, useState } from \"react\";\n\nconst Book = ({ book, onBooksUpdate }) => {\n  const [shelf, setShelf] = useState(book.shelf || \"none\");\n  const [changed, setChanged] = useState(false);\n\n  const onSelectChangeHandler = async (e) => {\n    const selectedShelf = e.target.value;\n    setShelf(selectedShelf);\n    onBooksUpdate(book, selectedShelf);\n    await update(book, selectedShelf);\n  };\n  return (\n    <li>\n      <div className=\"book\">\n        <div className=\"book-top\">\n          <div\n            className=\"book-cover\"\n            style={{\n              width: 128,\n              height: 193,\n              backgroundImage: `url(${\n                book.imageLinks && book.imageLinks.smallThumbnail\n              })`,\n            }}\n          ></div>\n          <div className=\"book-shelf-changer\">\n            <select value={shelf} onChange={onSelectChangeHandler}>\n              <option value=\"moveto\" disabled>\n                Move to...\n              </option>\n              <option value=\"currentlyReading\">Currently Reading</option>\n              <option value=\"wantToRead\">Want to Read</option>\n              <option value=\"read\">Read</option>\n              <option value=\"none\">None</option>\n            </select>\n          </div>\n        </div>\n        <div className=\"book-title\">{book.title}</div>\n        <div className=\"book-authors\">\n          {book.authors && book.authors.join(\", \")}\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default Book;\n","import Book from \"./Book\";\n\nconst SearchResult = ({ books, onBooksUpdate, allBooks }) => {\n  books.forEach((book) =>\n    allBooks.forEach((b) => {\n      if (b.id == book.id) {\n        book.shelf = b.shelf;\n      }\n    })\n  );\n  return (\n    <div className=\"search-books-results\">\n      <ol className=\"books-grid\">\n        {books.map((book) => (\n          <Book book={book} key={book.id} onBooksUpdate={onBooksUpdate} />\n        ))}\n      </ol>\n    </div>\n  );\n};\n\nexport default SearchResult;\n","import { useEffect, useState } from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport SearchResult from \"./SearchResult\";\nimport * as BooksAPI from \"../BooksAPI\";\n\nconst Search = () => {\n  const [searchResults, setSearchResults] = useState([]);\n  const [changed, setChanged] = useState(false);\n\n  const onChangeInputHandler = async (query) => {\n    if (!query) return setSearchResults([]);\n    const books = await BooksAPI.search(query, 5);\n    setSearchResults(books);\n  };\n\n  const onBooksUpdate = (book, newShelf) => {\n    book.shelf = newShelf;\n    setChanged(!changed);\n  };\n\n  const [allBooks, setAllBooks] = useState([]);\n\n  useEffect(() => {\n    let mounted = false;\n    const getBooks = async () => {\n      const res = await BooksAPI.getAll();\n      setAllBooks(res);\n      mounted = true;\n    };\n\n    if (!mounted) getBooks();\n  }, []);\n\n  return (\n    <div className=\"search-books\">\n      <SearchBar onChangeInput={onChangeInputHandler} />\n      {Array.isArray(searchResults) && (\n        <SearchResult\n          books={searchResults}\n          allBooks={allBooks}\n          onBooksUpdate={onBooksUpdate}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Search;\n","import Book from \"./Book\";\n\nconst BooksShelf = ({ shelf, books, onBooksUpdate }) => {\n  return (\n    <div className=\"bookshelf\">\n      <h2 className=\"bookshelf-title\">{shelf}</h2>\n      <div className=\"bookshelf-books\">\n        <ol className=\"books-grid\">\n          {books.map((book) => (\n            <Book key={book.title} book={book} onBooksUpdate={onBooksUpdate} />\n          ))}\n        </ol>\n      </div>\n    </div>\n  );\n};\n\nexport default BooksShelf;\n","import * as BooksAPI from \"../BooksAPI.js\";\nimport { useEffect, useState } from \"react\";\nimport BooksShelf from \"./BooksShelf\";\n\nconst ShelvesList = () => {\n  const shelves = [\n    { title: \"Currently Reading\", val: \"currentlyReading\" },\n    { title: \"Want to Read\", val: \"wantToRead\" },\n    { title: \"Read\", val: \"read\" },\n  ];\n\n  const [books, setBooks] = useState([]);\n  const [changed, setChanged] = useState(false);\n\n  useEffect(() => {\n    let mounted = false;\n    const getBooks = async () => {\n      const res = await BooksAPI.getAll();\n      setBooks(res);\n      mounted = true;\n    };\n\n    if (!mounted) getBooks();\n  }, []);\n\n  const onUpdateBooksHandler = (book, newShelf) => {\n    book.shelf = newShelf;\n    setChanged(!changed);\n  };\n\n  return (\n    <div className=\"list-books-content\">\n      <div>\n        {shelves.map((shelf) => {\n          const booksForShelf = books.filter((book) => book.shelf == shelf.val);\n          return (\n            <BooksShelf\n              key={shelf.title}\n              shelf={shelf.title}\n              books={booksForShelf}\n              onBooksUpdate={onUpdateBooksHandler}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default ShelvesList;\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport Search from \"./components/Search\";\nimport ShelvesList from \"./components/ShelvesList\";\nimport { Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"list-books\">\n        <div className=\"list-books-title\">\n          <h1>MyReads</h1>\n        </div>\n        <ShelvesList />\n        <div className=\"open-search\">\n          <Link to=\"/search\">Add a book</Link>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Search from \"./components/Search\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />} />\n      <Route path=\"/Search\" element={<Search />} />\n    </Routes>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}